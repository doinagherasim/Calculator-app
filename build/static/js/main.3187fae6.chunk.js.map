{"version":3,"sources":["Calculator/Calculator.js","App.js","index.js"],"names":["Calculator","math","require","useState","value","setValue","prevOperator","setPrevOperator","operatorsTop","digits","operatorsRight","storedValue","setStoredValue","dotCounter","setDotCounter","prevValue","setPrevValue","minus","setMinus","valueLenght","setValueLenght","clickHandler","digit","operators","includes","length","slice","window","location","reload","operatorsArray","hasOperator","some","el","lastOperatorIndex","reverse","findIndex","nextIndex","splice","counter","operation","join","calcResult","evaluate","console","log","className","map","element","index","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3187fae6.chunk.js","sourcesContent":["import React from \"react\";\nimport classes from \"./calculator.css\";\nimport {useState} from \"react\";\n\nfunction Calculator() {\n  const math = require(\"mathjs\");\n    // 1. Declare state variables\n    // Declare state variables to store the value and the previous operator\n  const [value, setValue] = useState([]);\n  const [prevOperator, setPrevOperator] = useState(\"\");\n\n  const operatorsTop = [\"DEL\",\"C\", \"+/-\", \"%\"];\n  const digits =[ 7, 8, 9, 4, 5, 6, 1, 2, 3];\n  const operatorsRight = [\"/\",\"*\",\"-\",\"+\"];\n  const operatorsBottom = [0, \".\",\"=\"];\n\n  const [storedValue, setStoredValue] = useState([]);\n  const [dotCounter, setDotCounter] = useState(0);\n  const [prevValue, setPrevValue] = useState([]);\n  const [minus, setMinus] =useState(false);\n  const [valueLenght, setValueLenght] = useState(0);\n  \n    \n    // 2. clickHndler for each digit\n    const clickHandler = (digit) => {\n\n    const operators = [\"+\", \"-\", \"*\", \"/\",\"%\"];  // Array of operators\n\n    if (operators.includes(prevOperator) && operators.includes(digit)) {\n      setValue([...prevValue,digit]);\n      setStoredValue(value);\n        return;  // Do not allow the user to enter two or more operators one after another\n      }\n        else if ((operatorsTop.includes(digit) ||  operatorsRight.includes(digit) || digit === 0)\n        && value.length === 0){\n        setValue([]); // do not allow user to enter operators if there is no digits\n       } \n       else if((digits.includes(digit) || digit === 0)){   \n          setValue([...value, digit]); // return the digit value if it is a number\n          setPrevOperator(digit);\n          setStoredValue(value);}\n       else if(operators.includes(digit)){\n        if(digit === \"-\"){\n        setMinus(true);\n        setDotCounter(0);\n        }\n        if(digit === \"+\" || digit === \"/\" || digit === \"*\") {\n          setMinus(false);\n          setDotCounter(0);\n        }\n        setValue([...value, digit]);\n        setPrevOperator(digit);\n        setPrevValue([...value]);\n        setStoredValue([...value]);\n        return;\n       }\n\n    // DELETE button   \n    if (digit === \"DEL\"){\n      setValue(value.slice(0,-1));\n      setStoredValue(value.slice(0,-1));\n      setDotCounter(0);\n    } \n\n     // CLEAR button\n     if(digit === \"C\" && value.length > 0){\n      window.location.reload();\n     }\n\n    // PLUS/MINUS operator \n    if (digit === \"+/-\") {\n      const operatorsArray = [\"+\",\"*\", \"/\",\"%\"];\n      const hasOperator = value.some(el => operatorsArray.includes(el));\n      const lastOperatorIndex = value.slice().reverse().findIndex(el => operatorsArray.includes(el));\n      const operatorIndex = value.length - lastOperatorIndex-1; // index of the operator\n      const nextIndex = operatorIndex + 1; // next index after operator\n      if(hasOperator) {\n        if( (value[nextIndex] !== \"-\" && minus === false)) {\n        value.splice(nextIndex,0,\"-\");\n        setValue([...value]);\n        setStoredValue(value);\n        }\n       else if(value[nextIndex] === \"-\" && minus === false){\n        value.splice(nextIndex,1);\n        setValue(value);\n        setStoredValue(value);\n      } else if(value[nextIndex] === \"-\" && minus === true) {\n        return;\n      }\n      } \n      else if(!hasOperator) {\n            if(value[0] !== \"-\") {\n              setPrevValue(value);\n              setValue([\"-\", ...value]);\n              } else if (value[0] === \"-\"){\n                setValue(prevValue);\n              }          \n      }\n    }\n    \n     // DOT operator \".\"\n    if (digit === \".\") {\n      let counter = dotCounter;\n      counter++; // Increment the dot counter if the user clicks on the \".\" button\n      setDotCounter(counter); \n      if(dotCounter === 0) {\n        if(value.length === 0) {\n          setValue([0,...value, digit]);\n        } else {\n          setValue([...value, digit]);\n        }\n        } else {\n          return;\n      }\n    }\n    \n     // EQUAL button - \"=\" and Calculation\n    if (digit === \"=\" && value.length >1) { \n      let operation = value.join(\"\");\n      const calcResult = math.evaluate(operation);\n            setValue([calcResult]);  \n            setStoredValue(operation); \n          if (digit === \"=\" && value.length === 0) {\n            setValue([]);  // Do not allow the user to press \"=\" if there are no values in the array\n          } \n          else if (digit === \"=\" && value.length === 1) {\n            setValue(value);\n            setStoredValue(value);\n            return;\n          }\n        };\n        console.log(\"vallen\", valueLenght);\n        if (value.length > 18){\n          setValueLenght(18);\n        } if (value.length > 32){\n          setValueLenght(32);\n        } if (value.length > 45)\n          setValueLenght(45);\n      };\n   \n   return (\n        <div className=\"container\">\n            <div className=\"calculator_container\">\n                <div className=\"screen_container\">\n                    <p className={valueLenght < 18 \n                    ? \"stored screen2\" : valueLenght >= 18 && valueLenght < 32 \n                    ? \"stored screen3\" : valueLenght >= 32 && valueLenght < 42\n                    ? \"stored screen4\" : \"stored screen5\"}>{storedValue}</p>\n                    <p className={valueLenght < 18 \n                    ? \"screen screen1\" : valueLenght >= 18 && valueLenght < 32\n                    ? \"screen screen2\" : valueLenght >= 32 && valueLenght < 42\n                    ? \"screen screen3\" : \"screen screen4\"\n                  } >{value}</p></div>\n\n                <div className=\"buttonBox buttonBoxTop\">{\n                    operatorsTop.map((element, index)=>\n                    <button className={(element === \"DEL\" || element === \"C\") \n                    ? \"button del\" : \"button btnGrey\"} key={index} \n                    onClick={()=>{clickHandler(element);}}>\n                        <p className=\"text\">{element}</p></button>\n                    )}\n                </div>\n\n                <div className=\"container2\">\n                  <div className=\"buttonBox buttonBoxDigits\">{\n                    digits.map((element, index)=>\n                    <button className=\"button\" key={index} onClick={()=> {clickHandler(element);}}>\n                        <p className=\"text\">{element}</p></button>)}   \n                  </div>\n\n                  <div className=\"buttonBox buttonBoxBottom\">{\n                    operatorsBottom.map((element, index)=>\n                    <button className={element === \"=\" ? \"button equal\" : \"button\"} key={index} \n                    onClick={()=> {clickHandler(element);}}>\n                        <p className=\"text\">{element}</p></button>\n                    )}\n                  </div>\n                </div>\n                <div className=\"buttonBox buttonBoxRight\">{\n                    operatorsRight.map((element, index)=>\n                    <button className={\"button btnGrey\"} key={index} \n                    onClick={()=> {clickHandler(element);}}>\n                        <p className={element === \"*\" ? \"asterisk\" : \"text\"}>{element}</p></button>\n                    )}\n                  </div>\n                </div>\n            </div>\n          );\n};\n\nexport default Calculator;","import Calculator from \"./Calculator/Calculator\";\n\nfunction App() {\n  return (\n    <div>\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}